/**
 * generated by Xtext 2.36.0
 */
package org.xtext.example.term_project.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.term_project.Model;
import org.xtext.example.term_project.SimulateStatement;
import org.xtext.example.term_project.Team_goal_or_task;
import org.xtext.example.term_project.Term_projectPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.term_project.impl.ModelImpl#getStatements <em>Statements</em>}</li>
 *   <li>{@link org.xtext.example.term_project.impl.ModelImpl#getSimulate <em>Simulate</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModelImpl extends MinimalEObjectImpl.Container implements Model
{
  /**
   * The cached value of the '{@link #getStatements() <em>Statements</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStatements()
   * @generated
   * @ordered
   */
  protected EList<Team_goal_or_task> statements;

  /**
   * The cached value of the '{@link #getSimulate() <em>Simulate</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSimulate()
   * @generated
   * @ordered
   */
  protected SimulateStatement simulate;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return Term_projectPackage.Literals.MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Team_goal_or_task> getStatements()
  {
    if (statements == null)
    {
      statements = new EObjectContainmentEList<Team_goal_or_task>(Team_goal_or_task.class, this, Term_projectPackage.MODEL__STATEMENTS);
    }
    return statements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SimulateStatement getSimulate()
  {
    return simulate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSimulate(SimulateStatement newSimulate, NotificationChain msgs)
  {
    SimulateStatement oldSimulate = simulate;
    simulate = newSimulate;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Term_projectPackage.MODEL__SIMULATE, oldSimulate, newSimulate);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSimulate(SimulateStatement newSimulate)
  {
    if (newSimulate != simulate)
    {
      NotificationChain msgs = null;
      if (simulate != null)
        msgs = ((InternalEObject)simulate).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Term_projectPackage.MODEL__SIMULATE, null, msgs);
      if (newSimulate != null)
        msgs = ((InternalEObject)newSimulate).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Term_projectPackage.MODEL__SIMULATE, null, msgs);
      msgs = basicSetSimulate(newSimulate, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Term_projectPackage.MODEL__SIMULATE, newSimulate, newSimulate));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case Term_projectPackage.MODEL__STATEMENTS:
        return ((InternalEList<?>)getStatements()).basicRemove(otherEnd, msgs);
      case Term_projectPackage.MODEL__SIMULATE:
        return basicSetSimulate(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case Term_projectPackage.MODEL__STATEMENTS:
        return getStatements();
      case Term_projectPackage.MODEL__SIMULATE:
        return getSimulate();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case Term_projectPackage.MODEL__STATEMENTS:
        getStatements().clear();
        getStatements().addAll((Collection<? extends Team_goal_or_task>)newValue);
        return;
      case Term_projectPackage.MODEL__SIMULATE:
        setSimulate((SimulateStatement)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case Term_projectPackage.MODEL__STATEMENTS:
        getStatements().clear();
        return;
      case Term_projectPackage.MODEL__SIMULATE:
        setSimulate((SimulateStatement)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case Term_projectPackage.MODEL__STATEMENTS:
        return statements != null && !statements.isEmpty();
      case Term_projectPackage.MODEL__SIMULATE:
        return simulate != null;
    }
    return super.eIsSet(featureID);
  }

} //ModelImpl
