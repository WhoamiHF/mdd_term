/**
 * generated by Xtext 2.36.0
 */
package org.xtext.example.term_project.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.term_project.RobotDefinition;
import org.xtext.example.term_project.TeamDefinition;
import org.xtext.example.term_project.Term_projectPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Team Definition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.term_project.impl.TeamDefinitionImpl#getRobots <em>Robots</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TeamDefinitionImpl extends Team_goal_or_taskImpl implements TeamDefinition
{
  /**
   * The cached value of the '{@link #getRobots() <em>Robots</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRobots()
   * @generated
   * @ordered
   */
  protected EList<RobotDefinition> robots;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TeamDefinitionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return Term_projectPackage.Literals.TEAM_DEFINITION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<RobotDefinition> getRobots()
  {
    if (robots == null)
    {
      robots = new EObjectContainmentEList<RobotDefinition>(RobotDefinition.class, this, Term_projectPackage.TEAM_DEFINITION__ROBOTS);
    }
    return robots;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case Term_projectPackage.TEAM_DEFINITION__ROBOTS:
        return ((InternalEList<?>)getRobots()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case Term_projectPackage.TEAM_DEFINITION__ROBOTS:
        return getRobots();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case Term_projectPackage.TEAM_DEFINITION__ROBOTS:
        getRobots().clear();
        getRobots().addAll((Collection<? extends RobotDefinition>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case Term_projectPackage.TEAM_DEFINITION__ROBOTS:
        getRobots().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case Term_projectPackage.TEAM_DEFINITION__ROBOTS:
        return robots != null && !robots.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //TeamDefinitionImpl
