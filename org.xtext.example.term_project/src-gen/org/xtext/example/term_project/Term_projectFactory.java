/**
 * generated by Xtext 2.36.0
 */
package org.xtext.example.term_project;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see org.xtext.example.term_project.Term_projectPackage
 * @generated
 */
public interface Term_projectFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  Term_projectFactory eINSTANCE = org.xtext.example.term_project.impl.Term_projectFactoryImpl.init();

  /**
   * Returns a new object of class '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Model</em>'.
   * @generated
   */
  Model createModel();

  /**
   * Returns a new object of class '<em>Team goal or task</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Team goal or task</em>'.
   * @generated
   */
  Team_goal_or_task createTeam_goal_or_task();

  /**
   * Returns a new object of class '<em>Team Definition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Team Definition</em>'.
   * @generated
   */
  TeamDefinition createTeamDefinition();

  /**
   * Returns a new object of class '<em>Robot Definition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Robot Definition</em>'.
   * @generated
   */
  RobotDefinition createRobotDefinition();

  /**
   * Returns a new object of class '<em>Goal Definition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Goal Definition</em>'.
   * @generated
   */
  GoalDefinition createGoalDefinition();

  /**
   * Returns a new object of class '<em>Task Definition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Task Definition</em>'.
   * @generated
   */
  TaskDefinition createTaskDefinition();

  /**
   * Returns a new object of class '<em>Condition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Condition</em>'.
   * @generated
   */
  Condition createCondition();

  /**
   * Returns a new object of class '<em>Task Statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Task Statement</em>'.
   * @generated
   */
  TaskStatement createTaskStatement();

  /**
   * Returns a new object of class '<em>Move To Statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Move To Statement</em>'.
   * @generated
   */
  MoveToStatement createMoveToStatement();

  /**
   * Returns a new object of class '<em>Simulate Statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Simulate Statement</em>'.
   * @generated
   */
  SimulateStatement createSimulateStatement();

  /**
   * Returns a new object of class '<em>Run Statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Run Statement</em>'.
   * @generated
   */
  RunStatement createRunStatement();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  Term_projectPackage getTerm_projectPackage();

} //Term_projectFactory
